using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class ExcelQ : MonoBehaviour {

	public static List<string> cmdName = new List<string>();
	public static List<string> keyName = new List<string>();
	public static List<int> dist = new List<int>();
	public static List<bool> ctrl = new List<bool>();
	public static List<bool> alt = new List<bool>();
	public static List<bool> shift = new List<bool>();
	public static List<KeyCode> keycode = new List<KeyCode>();
	public static bool f = false;
	// Use this for initialization
	void Start () {
		if(f != true){
			f = true;
			cmdName.Add("複数セルに同じデータ入力");
			cmdName.Add("セル内改行");
			cmdName.Add("列を非表示");
			cmdName.Add("非表示列を再表示");
			cmdName.Add("［書式設定］の表示");
			cmdName.Add("［太字］の設定・解除");
			cmdName.Add("［斜体］の設定・解除");
			cmdName.Add("［下線］の設定・解除");
			cmdName.Add("取り消し線の設定・解除");
			cmdName.Add("アウトライン記号の表示・非表示");
			cmdName.Add("行を非表示");
			cmdName.Add("非表示の行を再表示");
			cmdName.Add("全て選択");
			cmdName.Add("［太字］の設定・解除");
			cmdName.Add("コピー");
			cmdName.Add("上のセルのコピー＆貼り付け");
			cmdName.Add("［検索］の表示");
			cmdName.Add("［ジャンプ］の表示");
			cmdName.Add("［置換］の表示");
			cmdName.Add("［斜体］の設定・解除");
			cmdName.Add("ハイパーリンクの挿入");
			cmdName.Add("ブックの新規作成");
			cmdName.Add("ファイルを開く");
			cmdName.Add("印刷");
			cmdName.Add("左のセルのコピー＆貼り付け");
			cmdName.Add("上書き保存");
			cmdName.Add("［下線］の設定・解除");
			cmdName.Add("貼り付け");
			cmdName.Add("閉じる");
			cmdName.Add("切り取り");
			cmdName.Add("直前の操作の繰り返し");
			cmdName.Add("直前の操作を元に戻す");
			cmdName.Add("セル・行・列の削除");
			cmdName.Add("SUM関数の挿入");
			cmdName.Add("［桁区切り］を設定");
			cmdName.Add("［日付］を設定");
			cmdName.Add("［通貨］を設定");
			cmdName.Add("［パーセント］を設定");
			cmdName.Add("［外枠］罫線を設定");
			cmdName.Add("一つ上の数式の計算結果をコピー");
			cmdName.Add("1つ上の数式を絶対参照でコピー");
			cmdName.Add("データが入力されている範囲を選択");
			cmdName.Add("現在の時刻を入力");
			cmdName.Add("今日の日付を入力");
			cmdName.Add("可視セルの選択");
			cmdName.Add("［時刻］スタイルを設定");
			cmdName.Add("指数書式を設定");
			cmdName.Add("標準書式を設定");
			cmdName.Add("罫線の削除");
			cmdName.Add("セル・行・列の挿入");
			cmdName.Add("アクティブセルの表示");
			cmdName.Add("最後のセルにジャンプ");
			cmdName.Add("アクティブセルから最後のセルまで選択");
			cmdName.Add("先頭のセルにジャンプ");
			cmdName.Add("次のシートを表示");
			cmdName.Add("前のシートを表示");
			cmdName.Add("列を選択");
			cmdName.Add("行を選択");
			cmdName.Add("データの途切れるセルにジャンプ(上)");
			cmdName.Add("データの途切れるセルにジャンプ(下)");
			cmdName.Add("データの途切れるセルにジャンプ(左)");
			cmdName.Add("データの途切れるセルにジャンプ(右)");
			cmdName.Add("データの途切れるセルまで選択（上）");
			cmdName.Add("データの途切れるセルまで選択（下）");
			cmdName.Add("データの途切れるセルまで選択（左）");
			cmdName.Add("データの途切れるセルまで選択（右）");
			cmdName.Add("リストの表示");
			cmdName.Add("ヘルプの表示");
			cmdName.Add("新規グラフシートへグラフの作成");
			cmdName.Add("編集モードへ切り替え");
			cmdName.Add("コメント挿入");
			cmdName.Add("［名前の定義］の表示");
			cmdName.Add("相対・絶対・複合参照の切り替え");
			cmdName.Add("Excelの終了");
			cmdName.Add("［ジャンプ］の表示");
			cmdName.Add("アクティブな子ウィンドウの切り替え");
			cmdName.Add("スペルチェック");
			cmdName.Add("拡張モードへ切り替え");
			cmdName.Add("ADOモードへ切り替え");
			cmdName.Add("［マクロ］の表示");
			cmdName.Add("開いているブックの再計算");
			cmdName.Add("アクティブシートの再計算");
			cmdName.Add("子ウィンドウの最大化←→解除");
			cmdName.Add("新規グラフシートへグラフの作成");
			cmdName.Add("ワークシートの挿入");
			cmdName.Add("VBEの起動");
			cmdName.Add("名前を付けて保存");
			cmdName.Add("上書き保存");
			cmdName.Add("ファイルを開く");

			keyName.Add("Ctrl-Enter");
			keyName.Add("Alt-Enter");
			keyName.Add("Ctrl-0");
			keyName.Add("Ctrl-Shift-0");
			keyName.Add("Ctrl-1");
			keyName.Add("Ctrl-2");
			keyName.Add("Ctrl-3");
			keyName.Add("Ctrl-4");
			keyName.Add("Ctrl-5");
			keyName.Add("Ctrl-8");
			keyName.Add("Ctrl-9");
			keyName.Add("Ctrl-Shift-9");
			keyName.Add("Ctrl-a");
			keyName.Add("Ctrl-b");
			keyName.Add("Ctrl-c");
			keyName.Add("Ctrl-d");
			keyName.Add("Ctrl-f");
			keyName.Add("Ctrl-g");
			keyName.Add("Ctrl-h");
			keyName.Add("Ctrl-i");
			keyName.Add("Ctrl-k");
			keyName.Add("Ctrl-n");
			keyName.Add("Ctrl-o");
			keyName.Add("Ctrl-p");
			keyName.Add("Ctrl-r");
			keyName.Add("Ctrl-s");
			keyName.Add("Ctrl-u");
			keyName.Add("Ctrl-v");
			keyName.Add("Ctrl-w");
			keyName.Add("Ctrl-x");
			keyName.Add("Ctrl-y");
			keyName.Add("Ctrl-z");
			keyName.Add("Ctrl--");
			keyName.Add("Shift-Alt-=");
			keyName.Add("Ctrl-Shift-1");
			keyName.Add("Ctrl-Shift-3");
			keyName.Add("Ctrl-Shift-4");
			keyName.Add("Ctrl-Shift-5");
			keyName.Add("Ctrl-Shift-6");
			keyName.Add("Ctrl-Shift-2");
			keyName.Add("Ctrl-Shift-7");
			keyName.Add("Ctrl-Shift-*");
			keyName.Add("Ctrl-:");
			keyName.Add("Ctrl-;");
			keyName.Add("Alt-;");
			keyName.Add("Ctrl-@");
			keyName.Add("Ctrl-^");
			keyName.Add("Ctrl-Shift-~");
			keyName.Add("Ctrl-Shift-_");
			keyName.Add("Ctrl-Shift-");
			keyName.Add("Ctrl-BackSpace");
			keyName.Add("Ctrl-End");
			keyName.Add("Ctrl-Shift-End");
			keyName.Add("Ctrl-Home");
			keyName.Add("Ctrl-PageDown");
			keyName.Add("Ctrl-PageUp");
			keyName.Add("Ctrl-スペース");
			keyName.Add("Shift-スペース");
			keyName.Add("Ctrl-↑");
			keyName.Add("Ctrl-↓");
			keyName.Add("Ctrl-←");
			keyName.Add("Ctrl-→");
			keyName.Add("Ctrl-Shift-↑");
			keyName.Add("Ctrl-Shift-↓");
			keyName.Add("Ctrl-Shift-←");
			keyName.Add("Ctrl-Shift-→");
			keyName.Add("Alt-↓");
			keyName.Add("F1");
			keyName.Add("Alt-F1");
			keyName.Add("F2");
			keyName.Add("Shift-F2");
			keyName.Add("Ctrl-F3");
			keyName.Add("F4");
			keyName.Add("Alt-F4");
			keyName.Add("F5");
			keyName.Add("Ctrl-F6");
			keyName.Add("F7");
			keyName.Add("F8");
			keyName.Add("Shift-F8");
			keyName.Add("Alt-F8");
			keyName.Add("F9");
			keyName.Add("Shift-F9");
			keyName.Add("Ctrl-F10");
			keyName.Add("F11");
			keyName.Add("Shift-F11");
			keyName.Add("Alt-F11");
			keyName.Add("F12");
			keyName.Add("Shift-F12");
			keyName.Add("Ctrl-F12");


			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);
			dist.Add(0);

			ctrl.Add(true);
			ctrl.Add(false);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(false);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(false);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(false);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(true);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(true);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(true);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(true);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(false);
			ctrl.Add(true);

			alt.Add(false);
			alt.Add(true);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(true);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(true);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(true);
			alt.Add(false);
			alt.Add(true);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(true);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(true);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);
			alt.Add(true);
			alt.Add(false);
			alt.Add(false);
			alt.Add(false);

			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(false);
			shift.Add(false);
			shift.Add(true);
			shift.Add(false);

			keycode.Add(KeyCode.Return);
			keycode.Add(KeyCode.Return);
			keycode.Add(KeyCode.Alpha0);
			keycode.Add(KeyCode.Alpha0);
			keycode.Add(KeyCode.Alpha1);
			keycode.Add(KeyCode.Alpha2);
			keycode.Add(KeyCode.Alpha3);
			keycode.Add(KeyCode.Alpha4);
			keycode.Add(KeyCode.Alpha5);
			keycode.Add(KeyCode.Alpha8);
			keycode.Add(KeyCode.Alpha9);
			keycode.Add(KeyCode.Alpha9);
			keycode.Add(KeyCode.A);
			keycode.Add(KeyCode.B);
			keycode.Add(KeyCode.C);
			keycode.Add(KeyCode.D);
			keycode.Add(KeyCode.F);
			keycode.Add(KeyCode.G);
			keycode.Add(KeyCode.H);
			keycode.Add(KeyCode.I);
			keycode.Add(KeyCode.K);
			keycode.Add(KeyCode.N);
			keycode.Add(KeyCode.O);
			keycode.Add(KeyCode.P);
			keycode.Add(KeyCode.R);
			keycode.Add(KeyCode.S);
			keycode.Add(KeyCode.U);
			keycode.Add(KeyCode.V);
			keycode.Add(KeyCode.W);
			keycode.Add(KeyCode.X);
			keycode.Add(KeyCode.Y);
			keycode.Add(KeyCode.Z);
			keycode.Add(KeyCode.Minus);
			keycode.Add(KeyCode.Minus);
			keycode.Add(KeyCode.Alpha1);
			keycode.Add(KeyCode.Alpha3);
			keycode.Add(KeyCode.Alpha4);
			keycode.Add(KeyCode.Alpha5);
			keycode.Add(KeyCode.Alpha6);
			keycode.Add(KeyCode.Alpha2);
			keycode.Add(KeyCode.Alpha7);
			keycode.Add(KeyCode.Semicolon);
			keycode.Add(KeyCode.Semicolon);
			keycode.Add(KeyCode.Equals);
			keycode.Add(KeyCode.Equals);
			keycode.Add(KeyCode.BackQuote);
			keycode.Add(KeyCode.Quote);
			keycode.Add(KeyCode.Quote);
			keycode.Add(KeyCode.Backslash);
			keycode.Add(KeyCode.Equals);
			keycode.Add(KeyCode.Backspace);
			keycode.Add(KeyCode.End);
			keycode.Add(KeyCode.End);
			keycode.Add(KeyCode.Home);
			keycode.Add(KeyCode.PageDown);
			keycode.Add(KeyCode.PageUp);
			keycode.Add(KeyCode.Space);
			keycode.Add(KeyCode.Space);
			keycode.Add(KeyCode.UpArrow);
			keycode.Add(KeyCode.DownArrow);
			keycode.Add(KeyCode.LeftArrow);
			keycode.Add(KeyCode.RightArrow);
			keycode.Add(KeyCode.UpArrow);
			keycode.Add(KeyCode.DownArrow);
			keycode.Add(KeyCode.LeftArrow);
			keycode.Add(KeyCode.RightArrow);
			keycode.Add(KeyCode.DownArrow);
			keycode.Add(KeyCode.F1);
			keycode.Add(KeyCode.F1);
			keycode.Add(KeyCode.F2);
			keycode.Add(KeyCode.F2);
			keycode.Add(KeyCode.F3);
			keycode.Add(KeyCode.F4);
			keycode.Add(KeyCode.F4);
			keycode.Add(KeyCode.F5);
			keycode.Add(KeyCode.F6);
			keycode.Add(KeyCode.F7);
			keycode.Add(KeyCode.F8);
			keycode.Add(KeyCode.F8);
			keycode.Add(KeyCode.F8);
			keycode.Add(KeyCode.F9);
			keycode.Add(KeyCode.F9);
			keycode.Add(KeyCode.F10);
			keycode.Add(KeyCode.F11);
			keycode.Add(KeyCode.F11);
			keycode.Add(KeyCode.F11);
			keycode.Add(KeyCode.F12);
			keycode.Add(KeyCode.F12);
			keycode.Add(KeyCode.F12);
		}
	}

	// Update is called once per frame
	void Update () {

	}
}
